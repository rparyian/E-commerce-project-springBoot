pipeline {
    agent any
    tools {
        maven '3.9.5'
        jdk 'Java17'
    }
    triggers {
        pollSCM('0 */2 9-17 * 1-5') // Poll SCM every 2 hours at working days between 9-00 and 17-00
    }
     stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from your version control system
                git branch: 'feature-create-pipeline-from-JenkinsFile', url: 'https://github.com/rparyian/E-commerce-project-springBoot.git'
            }
        }
        stage('Prepare SonarQube Scanner') {
            steps {
                // Download and install SonarQube Scanner
                script {
                    def scannerHome = tool 'SonarQube Scanner'
                    env.PATH = "${scannerHome}/bin:${env.PATH}"
                }
            }
        }
        stage('Build and Analyze') {
            steps {
                // Build the project, run tests, and analyze with SonarQube
                withSonarQubeEnv('SonarQube'){
                    dir('JtProject'){
                        bat 'mvn clean test install sonar:sonar'
                    }
                }
           }
        }
        stage ('Deploy') {
              steps {
                script {
                  deploy adapters: [tomcat9(credentialsId: 'deployer', path: '', url: 'http://localhost:8282')], onFailure: false, war: '**/*.war'
                }
              }
        }
    }

    post {
        success {
                    // Record JaCoCo coverage report
                    jacoco(execPattern: '**/target/jacoco.exec')
                    // Actions to perform if the pipeline is successful
                    echo 'Build and analysis successful!'
                }

        failure {
            // Actions to perform if the pipeline fails
            echo 'Build or analysis failed!'
        }
    }
}